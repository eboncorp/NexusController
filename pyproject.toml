[project]
name = "nexuscontroller"
version = "2.0.0"
description = "Enterprise Infrastructure Management Platform"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.104.0",
    "pydantic>=2.5.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "redis>=5.0.0",
    "aiokafka>=0.10.0",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "httpx>=0.25.0",
    "structlog>=23.2.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "cachetools>=5.3.0",
    "tenacity>=8.2.0",
    "uvicorn[standard]>=0.24.0",
    "slowapi>=0.1.9",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.0",
    "pyyaml>=6.0.1",
    "click>=8.1.7",
    "rich>=13.7.0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.6",
    "cryptography>=41.0.7",
    "boto3>=1.34.0",
    "azure-mgmt-compute>=30.4.0",
    "google-cloud-compute>=1.14.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pip-audit>=2.6.0",
    "bandit>=1.7.5",
    "safety>=3.0.0",
    "black>=23.12.0",
    "ipython>=8.18.0",
    "pytest-mock>=3.12.0",
    "faker>=20.1.0",
    "factory-boy>=3.3.0",
    "httpx>=0.25.0",
    "respx>=0.20.2"
]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E", "F", "W",  # pycodestyle + pyflakes
    "I",            # isort
    "B",            # flake8-bugbear
    "S",            # bandit
    "UP",           # pyupgrade
    "DTZ",          # flake8-datetimez
    "RUF",          # Ruff-specific rules
    "C90",          # mccabe complexity
    "N",            # pep8-naming
    "D",            # pydocstyle
    "PL",           # pylint
    "PT",           # flake8-pytest-style
]
ignore = ["E501", "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "D"]  # Allow assert and skip docstrings in tests
"scripts/*" = ["S101"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
addopts = """
    -ra
    --strict-markers
    --cov=nexuscontroller
    --cov-branch
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
"""

[tool.coverage.run]
source = ["nexuscontroller"]
omit = ["*/tests/*", "*/test_*.py", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"